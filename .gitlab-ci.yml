stages:
  - build
  - check
  - deploy

variables:
  NUGET_PACKAGES: ${CI_PROJECT_DIR}/.cache/nuget/packages
  FF_USE_FASTZIP: 1

.cache: &cache
  key: nuget
  paths: [ .cache/nuget ]
  policy: pull

default:
  image: mcr.microsoft.com/dotnet/sdk:6.0
  before_script:
    - dotnet tool restore
  cache:
    - <<: *cache
      policy: pull

.job:
  only:
    - master
    - tags
    - merge_requests

compile:
  extends: .job
  stage: build
  script:
    - dotnet nuke compile
  artifacts:
    name: compiled
    paths:
      - ./**/bin
      - ./**/obj
      - ./.nuke
  cache:
    - <<: *cache
      policy: pull-push

lint:
  extends: .job
  stage: check
  script:
    - dotnet nuke lint --skip compile
  artifacts:
    name: lint
    expose_as: lint
    paths:
      - output/reports/inspect-code.xml
    reports:
      codequality: [ ./output/reports/code-quality.json ]
    when: always
  cache:
    - <<: *cache
    - key: inspect-code
      paths: [ ./cache/inspect-code ]
      when: always

test:
  extends: .job
  stage: check
  script:
    - dotnet nuke test --skip compile
  artifacts: 
    reports:
      junit: [ ./output/reports/junit/*.xml ]

pack:
  extends: .job
  stage: check
  script:
    - dotnet nuke pack --skip compile
  artifacts:
    name: nupkg
    expose_as: nupkg
    paths: [ ./output/nupkg ]

push:nuget:
  extends: .job
  stage: deploy
  script:
    - dotnet nuke push --nuget-source nuget.org --skip pack
  dependencies: [ pack ]
  only: [ tags ]

push:gitlab:
  extends: .job
  stage: deploy
  script:
    - dotnet nuget add source "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/nuget/index.json" --name gitlab --username gitlab-ci-token --password $CI_JOB_TOKEN --store-password-in-clear-text
    - dotnet nuke push --nuget-source gitlab --skip pack
  dependencies: [ pack ]
  only:
    - master
    - merge_requests
